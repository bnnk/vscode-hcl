{
    "name": "HCL",
    "scopeName": "source.hcl",
    "comment": "HashiCorp Configuration Language",
    "fileTypes": [
        "tf",
        "tfvars",
        "nomad",
        "hcl"
    ],
    "patterns": [
        { "include": "#comments" },      
        { "include": "#constructs" },
        { "include": "#constants" },
        { "include": "#variable" },
        { "include": "#variable-map" }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "comment": "Single line comments with number-sign",
                    "match": "(#)+(.*)",
                    "captures": {
                        "0": {
                            "name": "comment.line.number-sign.hcl"
                        }
                    }
                },
                {
                    "comment": "Single line comments with double-slash",
                    "match": "(//)+(.*)",
                    "captures": {
                        "0": {
                            "name": "comment.line.double-slash.hcl"
                        }
                    }
                },
                {
                    "comment": "Multiple line comment block",
                    "begin": "/\\*",
                    "beginCaptures": {
                        "0" : {
                            "name": "comment.block.documentation.hcl"
                        }
                    },
                    "end": "\\*/",
                    "endCaptures": {
                        "0" : {
                            "name": "comment.block.documentation.hcl"
                        }
                    },
                    "contentName" : "comment.block.documentation.hcl"
                }
            ]
        },
        "strings" : {
            "patterns" : [
                {
                    "begin": "\"",
                    "beginCaptures": {
                        "0": {
                            "name": "string.quoted.double.hcl"
                        }
                    },
                    "end": "\"",
                    "endCaptures": {
                        "0": {
                            "name": "string.quoted.double.hcl"
                        }
                    }
                }
            ]
        },
        "constructs": {
            "patterns" : [
                {
                    "begin": "([\\w-]+)\\s+\\{",
                    "beginCaptures": {
                        "0": {
                            "name": "meta.function.hcl"
                        },
                        "1": {
                            "name": "storage.type.hcl"
                        }
                    },
                    "end": "\\}",
                    "patterns" : [
                        { "include": "$self" },
                        { "include": "#comments" },
                        { "include": "#constants" },
                        { "include": "#variable" },
                        { "include": "#variable-map" }
                    ]
                },
                {
                    "begin": "([\\w-]+)\\s+(\"[\\w\\s-]+\")\\s+\\{",
                    "beginCaptures": {
                        "0": {
                            "name": "meta.function.hcl"
                        },
                        "1": {
                            "name": "storage.type.hcl"
                        },
                        "2": {
                            "name": "string.quoted.double.hcl"
                        }
                    },
                    "end": "\\}",
                    "patterns" : [
                        { "include": "$self" },
                        { "include": "#comments" },
                        { "include": "#variable" },
                        { "include": "#variable-map" },
                        { "include": "#constants" }
                    ]
                },
                {
                    "begin": "([\\w-]+)\\s+(\"[\\w\\s-]+\")\\s+(\"[\\w\\s-]+\")\\s+\\{",
                    "beginCaptures": {
                        "0": {
                            "name": "meta.function.hcl"
                        },
                        "1": {
                            "name": "storage.type.hcl"
                        },
                        "2": {
                            "name": "string.quoted.double.hcl"
                        },
                        "3": {
                            "name": "string.quoted.double.hcl"
                        }
                    },
                    "end": "\\}",
                    "patterns" : [
                        { "include": "$self" },
                        { "include": "#comments" },
                        { "include": "#variable" },
                        { "include": "#variable-map" },
                        { "include": "#constants" }
                    ]
                },
                {
                    "begin": "([\\w-]+)\\s+(\"[\\w\\s-]+\")\\s+(\"[\\w\\s-]+\")\\s+(\"[\\w\\s-]+\")\\s+\\{",
                    "beginCaptures": {
                        "0": {
                            "name": "meta.function.hcl"
                        },
                        "1": {
                            "name": "storage.type.hcl"
                        },
                        "2": {
                            "name": "string.quoted.double.hcl"
                        },
                        "3": {
                            "name": "string.quoted.double.hcl"
                        },
                        "4": {
                            "name": "string.quoted.double.hcl"
                        }
                    },
                    "end": "\\}",
                    "patterns" : [
                        { "include": "$self" },
                        { "include": "#comments" },
                        { "include": "#variable" },
                        { "include": "#variable-map" },
                        { "include": "#constants" }
                    ]
                }
            ]
        },
        "variable" : {
            "patterns" : [
                {
                    "begin": "([\\w\\.-]+)\\s+(=)\\s+(\")",
                    "beginCaptures": {
                        "1": {
                            "name": "variable.parameter.hcl"
                        },
                        "2": {
                            "name": "keyword.operator.hcl"
                        },
                        "3": {
                            "name": "string.quoted.double.hcl"
                        }                       
                    },
                    "end": "\"",
                    "endCaptures": {
                        "0": {
                            "name": "string.quoted.double.hcl"
                        }
                    },
                    "patterns": [
                        {
                            "match": "[\\w\\s\\.-]+",
                            "captures": {
                                "0": {
                                    "name": "string.quoted.double.hcl"
                                }
                            }
                        },
                        { "include": "#variable-interpolation" }
                    ]
                },
                {
                    "match": "([\\w-]+)\\s+(=)\\s+\\{",
                    "captures": {
                        "1": {
                            "name": "variable.parameter.hcl"
                        },
                        "2": {
                            "name": "keyword.operator.hcl"
                        }
                    },
                    "end" : "\\}",
                    "endCaptures": {
                        "0": {
                            "name": "keyword.operator.hcl"
                        }
                    },
                    "patterns" : [
                        { "include": "$self" },
                        { "include": "#variable" },
                        { "include": "#constants" }
                    ]
                }
            ]
        },
        "variable-interpolation" : {
            "patterns" : [
                {
                    "begin": "\\$\\{",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.operator.hcl"
                        }
                    },
                    "end" : "\\}",
                    "endCaptures": {
                        "0": {
                            "name": "keyword.operator.hcl"
                        }
                    },
                    "patterns" : [
                        { "include": "#variable-interpolation-function" },
                        { "include": "#variable-interpolation-reference" }
                    ]
                }
            ]
        },
        "variable-interpolation-function" : {
            "patterns" : [
                {
                    "begin": "([\\w-]+)\\(",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.function.hcl"
                        }
                    },
                    "end" : "\\)",
                    "patterns" : [
                        {
                            "match": "\"[\\w\\s\\.-]+\"",
                            "captures": {
                                "0": {
                                    "name": "string.quoted.double.hcl"
                                }
                            }
                        },
                        { "include": "#constants" },
                        { "include": "#variable-interpolation-function" },
                        { "include": "#variable-interpolation-reference" }
                    ]
                }
            ]
        },
        "variable-interpolation-reference" : {
            "patterns" : [
                {
                    "match": "(var|module)\\.([\\w-]+)",
                    "captures": {
                        "1": {
                            "name": "storage.modifier.hcl"
                        },
                        "2": {
                            "name": "entity.name.type.hcl"
                        }
                    }
                }
            ]
        },
        "constants" : {
            "patterns" : [
                {
                    "comment": "Numbers in hexadecimal with optional suffixes",
                    "match": "([\\w\\.-]+)\\s+(=)\\s+(0x[0-9A-Fa-f]+)([kKmMgG]b?)?",
                    "captures": {
                        "1": {
                            "name": "variable.parameter.hcl"
                        },
                        "2": {
                            "name": "keyword.operator.hcl"
                        },
                        "3": {
                            "name": "constant.numeric.hcl"
                        }
                    }
                },
                {
                    "comment": "Numbers in decimal with optional suffixes",
                    "match": "([\\w\\.-]+)\\s+(=)\\s+([0-9]+([kKmMgG]b?)?)",
                    "captures": {
                        "1": {
                            "name": "variable.parameter.hcl"
                        },
                        "2": {
                            "name": "keyword.operator.hcl"
                        },
                        "3": {
                            "name": "constant.numeric.hcl"
                        }
                    }
                },
                {
                    "comment": "Language constants",
                    "match": "([\\w\\.-]+)\\s+(=)\\s+(true|false|yes|no|on|off)",
                    "captures": {
                        "1": {
                            "name": "variable.parameter.hcl"
                        },
                        "2": {
                            "name": "keyword.operator.hcl"
                        },
                        "3": {
                            "name": "constant.language.hcl"
                        }
                    }
                }
            ]
        }
    }
}